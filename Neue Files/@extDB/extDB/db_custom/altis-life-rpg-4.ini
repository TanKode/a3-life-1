[Default]
Version = 7

Number of Inputs = 0
; Default Value = 0

Sanitize Input Value Check = false
; Default Value = True

Sanitize Output Value Check = false
; Default Value = True

String Datatype Check = false
; Default Value = True
; If Database Type is String adds Quotations around Text / VarChar DataTypes when retrieving Values
;	Note: This Doesn't Work for Text DataTypes for MySQL but with Poco
;		Important try to avoid this, will break whenever extDB updates to 1.6/1.7 Poco

Strip = true
;Enable / Disable Strip

Strip Chars = `/\|;{}<>'
; Can't Strip Char : since its used as a divider in extDB.
; If you need it stripped you will need todo it in SQF Code.
; 	Note: if value contains divider :
; 		It will result in extDB reading to many input values + will return an error anyway.

;	Important if you are using $INPUT_STRING_x, recommended you strip the char `
;		That is the quotation char used to wrap strings

Strip Chars Action = STRIP+LOG
; Actions   NONE / STRIP / STRIP+LOG / STRIP+ERROR
;	None
;	Strip  
; 	Strip + Add Logs to extDB Logs
;	Strip + Error, doesnt execute SQL, reports error back to server


Prepared Statement Cache = true
; Allows you disable to Caching Prepared Statements, 
;	Useful to disable Per Call, for the SQL Statements you are only going to run once i.e at server startup
;	Also useful to disable global during testing, if you are altering Database Scheme on Live Server.


;; [CALL_NAME] INFO

;; ---------------------------------------
;; ---------------------------------------
;; SQLx_y   x = SQL Statement Line   y = SQL Statement Line x  Part y
;;		This allows for to define multiple SQL Prepared Statements to run with a single callextension.


;; Number of Inputs is the number of total inputs. If inputs received doesnt match this number. SQL Statement wont run.

;; SQLx_INPUTS   is INPUTS to use for SQL Line x
;; OUPUT is same as SQLx_INPUTS

;; INPUT / OUTPUT Options
;; 			STRING  Removes " from VALUE + then add " to either end of VALUE i.e "VALUE"
;;			BEGUID	Converts Value to BEGUID
;;			CHECK	Sanitize Check
;;			NOCHECK
;;			STRIP   Strip Chars (overrides Default Setting)
;;			STRIP
;;			AltisLifeRPG_Array    Converts Array format to Altis Life RPG format, for legacy support

;; They are separated by comma ,
;; Options themselves are tokenized by -
;; 		So the Option 1-STRING-BEGUID  means INPUT VALUE 1 -> converted to BEGUID + quotes added  (order of tokens makes no difference)




;;**************************************************************
;;**************************************************************
;; PROCEDURE CALLS  
;;

;;______________________________________________________________
[resetLifeVehicles]
;;

SQL1_1 = CALL resetLifeVehicles;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteDeadVehicles]
;;

SQL1_1 = CALL deleteDeadVehicles;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteOldHouses]
;;

SQL1_1 = CALL deleteOldHouses;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteOldGangs]
;;

SQL1_1 = CALL deleteOldGangs;

Number of Inputs = 0
Prepared Statement Cache = false


;;______________________________________________________________
[deleteOldContract]
;;

SQL1_1 = CALL deleteOldContract;

Number of Inputs = 0
Prepared Statement Cache = false



;;**************************************************************
;;**************************************************************
;; GANGS
;;


;;______________________________________________________________
[gangIDPlayer]
;;

SQL1_1 = SELECT id FROM gangs WHERE members LIKE ? AND active='1';

Number of Inputs = 1
SQL1_INPUTS = 1


;;______________________________________________________________
[gangNameSelectID]
;;

SQL1_1 = SELECT id FROM gangs WHERE name=? AND active=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[gangOwnerSelectID]
;;

SQL1_1 = SELECT id FROM gangs WHERE owner=? AND active=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2

;;______________________________________________________________
[gangInsert]
;;

SQL1_1 = INSERT INTO gangs (owner, name, members) VALUES(?,?,?);
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array

Number of Inputs = 3


;;______________________________________________________________
[gangUpdate]
;;

SQL1_1 = UPDATE gangs SET active=1, owner=?,members=? WHERE id=?;

Number of Inputs = 3
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array


;;______________________________________________________________
[gangRemove]
;;

SQL1_1 = UPDATE gangs SET active='0' WHERE id=?;
SQL1_INPUTS = 1

Number of Inputs = 1


;;______________________________________________________________
[gangInfo]
;; Get Gang Info
;;

SQL1_1 = SELECT id, owner, name, maxmembers, bank, members FROM gangs WHERE active='1' AND members LIKE ?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2-String, 3-String, 4, 5, 6-AltisLifeRPG_Array


;;______________________________________________________________
[gangBankInfoUpdate]
;; Update Gang Bank
;;

SQL1_1 = UPDATE gangs SET bank=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;______________________________________________________________
[gangInfoUpdate]
;; Update Gang Info
;;

SQL1_1 = UPDATE gangs SET bank=?, maxmembers=?, owner=? WHERE id=?;
SQL1_INPUTS = 1, 2, 3-String, 4

Number of Inputs = 4


;;______________________________________________________________
[gangMaxMembersUpdate]
;; Update Gang Max Members
;;

SQL1_1 = UPDATE gangs SET maxmembers=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;______________________________________________________________
[gangMembersUpdate]
;; Update Gang Members
;;

SQL1_1 = UPDATE gangs SET members=? WHERE id=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2

Number of Inputs = 2


;;______________________________________________________________
[gangOwnerUpdate]
;; Update Gang Owner
;;

SQL1_1 = UPDATE gangs SET owner=? WHERE id=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2


;;**************************************************************
;;**************************************************************
;; PLAYERS
;;

;;______________________________________________________________
[playerInfo]
;;

SQL1_1 = SELECT playerid, name FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1, 2

;;______________________________________________________________
[playerInfoInsert]
;;

SQL1_1 = INSERT INTO players 
;;					1        2 	   3    	4     5       6         7          8          9         10        	  11			12			13				14			15			16			17		 	18		   19		20		  21	22	  23		24		  25		26
SQL1_2 = 		(playerid, name, guid, aliases, cash, bankacc, cop_cash, cop_bankacc, med_cash, med_bankacc, adac_cash, adac_bankacc, cop_licenses, med_licenses, civ_licenses, adac_licenses, civ_gear, cop_gear, med_gear, adac_gear, level, exp, skill, skillpoint, position, veh_plate) 
SQL1_3 = 		VALUES(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 2-String, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26

Number of Inputs = 26

;;______________________________________________________________
[playerWestInfo]
;;
;;					1		2	  	3		 4				5			6			7			8		  9			10
SQL1_1 = SELECT playerid, name, cop_cash, cop_bankacc, adminlevel, donatorlvl, cop_licenses, coplevel, cop_gear, blacklist FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-AltisLifeRPG_Array, 8-String, 9-AltisLifeRPG_Array, 10

;;______________________________________________________________
[playerCivInfo]
;;
;;              	1      2     3     	4        	5           6           7            8          9		10		  11	 12	  13		14			15		16
SQL1_1 = SELECT playerid, name, cash, bankacc, adminlevel, donatorlvl, civ_licenses, arrested, civ_gear, rebellevel, level, exp, Skill, skillpoint, position, alive FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-AltisLifeRPG_Array, 8, 9-AltisLifeRPG_Array, 10-String, 11, 12, 13-AltisLifeRPG_Array, 14, 15-AltisLifeRPG_Array, 16

;;______________________________________________________________
[playerIndependentInfo]
;;
;;					1		2	  3			 4				5			6			7			  8			9
SQL1_1 = SELECT playerid, name, med_cash, med_bankacc, adminlevel, donatorlvl, med_licenses, mediclevel, med_gear FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-AltisLifeRPG_Array, 8-String, 9-AltisLifeRPG_Array

;;______________________________________________________________
[playerEastInfo]
;;
;;					1		2	 	 3		 	4			5			6			7			  8			9
SQL1_1 = SELECT playerid, name, adac_cash, adac_bankacc, adminlevel, donatorlvl, adac_licenses, adaclevel, adac_gear FROM players WHERE playerid=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3, 4, 5-String, 6-String, 7-AltisLifeRPG_Array, 8-String, 9-AltisLifeRPG_Array

;;______________________________________________________________
[playerWestUpdate]
;;

SQL1_1 = UPDATE players
;;				1          		2 	    	3          		4           5                   6
SQL1_2 = 		SET name=?, cop_cash=?, cop_bankacc=?, cop_gear=?, cop_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4-AltisLifeRPG_Array, 5-AltisLifeRPG_Array, 6

Number of Inputs = 6


;;______________________________________________________________
[playerCivilianUpdate]
;;

SQL1_1 = UPDATE players
;;					  1        2 	    3          4               5           6          7		 8		  9			10			11			12		 13		
SQL1_2 = 		SET name=?, cash=?, bankacc=?, civ_licenses=?, civ_gear=?, arrested=?, level=?, exp=?, skill=?, skillpoint=?, position=?, alive=?, veh_plate=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4-AltisLifeRPG_Array, 5-AltisLifeRPG_Array, 6, 7, 8, 9-AltisLifeRPG_Array, 10, 11-AltisLifeRPG_Array, 12, 13-AltisLifeRPG_Array, 14

Number of Inputs = 14


;;______________________________________________________________
[playerIndependentUpdate]
;;

SQL1_1 = UPDATE players
;;				1          		2 	    		3          4               5                 6
SQL1_2 = 		SET name=?, med_cash=?, med_bankacc=?, med_licenses=?, med_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4-AltisLifeRPG_Array, 5-AltisLifeRPG_Array, 6

Number of Inputs = 6


;;______________________________________________________________
[playerEastUpdate]
;;

SQL1_1 = UPDATE players
;;				1          		2 	    		3          4               5                 6
SQL1_2 = 		SET name=?, adac_cash=?, adac_bankacc=?, adac_licenses=?, adac_gear=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3, 4-AltisLifeRPG_Array, 5-AltisLifeRPG_Array, 6

Number of Inputs = 6


;;______________________________________________________________
[playerUpdateCopCash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_cash=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cash=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedCash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_cash=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAdacCash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET adac_cash=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCopBank]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET Cop_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateBank]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedBank]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAdacBank]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET adac_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCopBank+Cash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_cash=?, cop_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[playerUpdateBank+Cash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cash=?, bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[playerUpdateMedBank+Cash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_cash=?, med_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[playerUpdateAdacBank+Cash]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET adac_cash=?, adac_bankacc=? WHERE playerid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[playerUpdateCopLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCivLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET civ_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAdacLicense]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET adac_licenses=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCopGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET cop_gear=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateCivGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET civ_gear=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateMedGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET med_gear=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAdacGear]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET adac_gear=? WHERE playerid=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateAlive]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET alive=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2


;;______________________________________________________________
[playerUpdateArrested]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET arrested=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
;;______________________________________________________________
[playerUpdateJailTimeArrested]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET arrested='1', jail_time=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
;;______________________________________________________________
[playerSelectJailTime]
;;

SQL1_1 = SELECT jail_time FROM players WHERE playerid=?;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1
;;______________________________________________________________
[playerUpdateJailTime]
;;

SQL1_1 = UPDATE players
SQL1_2 = 		SET jail_time=? WHERE playerid=?;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
;;______________________________________________________________
[playerUpdateJailTime1]
;;

SQL1_1 = Update players
SQL1_2 = 		SET jail_time=(Jail_time - 1) WHERE playerid=?;

SQL1_INPUTS = 1
Number of Inputs = 1
;;______________________________________________________________
[playerSelectJailTime1]
;;

SQL1_1 = SELECT IF( remainingtime <= '0', TRUE, FALSE ) FROM players WHERE playerid=?;
SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1
;;______________________________________________________________
[getVehiclePlate]
;;

SQL1_1 = SELECT veh_plate
SQL1_2 = FROM players WHERE playerid=?;
SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-AltisLifeRPG_Array
;;**************************************************************
;;**************************************************************
;; VEHICLES
;;

;;______________________________________________________________
[vehicleDead]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

;;______________________________________________________________
[vehicleInsert]
;;

SQL1_1 = INSERT INTO vehicles 
;;						1      2          3     4    5      6       7          8      9		  10	12			13
SQL1_2 = 				(side, classname, type, pid, alive, active, inventory, color, plate, gear, damage, direction) 
SQL1_3 = 				VALUES (?,?,?,?,?,?,?,?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4, 5, 6, 7-AltisLifeRPG_Array, 8, 9, 10-AltisLifeRPG_Array, 11, 12
Number of Inputs = 12


;;______________________________________________________________
[vehicleInfo]
;;

;;				1   2     3          4     5    6      7       8      9			10		 11		12
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, inventory, gear, damage 
SQL1_2 = 	FROM vehicles WHERE id=? AND pid=?;
SQL1_INPUTS = 1, 2
Number of Inputs = 2

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10-AltisLifeRPG_Array, 11-AltisLifeRPG_Array, 12


;;______________________________________________________________
[vehiclesInfo]
;;

;;				1   2     3          4     5    6      7       8      9			10		11
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, inventory, gear
SQL1_2 = 	FROM vehicles WHERE pid=? AND alive=1 AND active = 0 AND side=? AND type=?;
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10-AltisLifeRPG_Array, 11-AltisLifeRPG_Array


;;______________________________________________________________
[vehiclesInfoAbschlepp]
;;

;;				1   2     3          4     5    6      7       8      9			10		11
SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, inventory, gear
SQL1_2 = 	FROM vehicles WHERE pid=? AND alive=1 AND active = 2 AND side=? AND type=?;
SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10-AltisLifeRPG_Array, 11-AltisLifeRPG_Array


;;______________________________________________________________
[vehicleUpdateActive]
;;

SQL1_1 = UPDATE vehicles SET active=? WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[vehicleUpdateActivePlate]
;;

SQL1_1 = UPDATE vehicles SET active=?, inventory=?, gear=?, damage=?, position=?, direction=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2-AltisLifeRPG_Array, 3-AltisLifeRPG_Array, 4, 5-AltisLifeRPG_Array, 6, 7, 8
Number of Inputs = 8


;;______________________________________________________________
[UpdateVehicleInventory]

SQL1_1 = UPDATE vehicles SET inventory=?, gear=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1-AltisLifeRPG_Array, 2-AltisLifeRPG_Array, 3, 4
Number of Inputs = 4


;;______________________________________________________________
[vehicleUpdateAlive]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND id=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3


;;______________________________________________________________
[vehicleUpdateAlivePlate]
;;

SQL1_1 = UPDATE vehicles SET alive=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
;;______________________________________________________________
[vehicleUpdateRepaint]
;;

SQL1_1 = UPDATE vehicles SET color=? WHERE plate=? AND pid=?;

SQL1_INPUTS = 1, 2, 3
Number of Inputs = 3
;;______________________________________________________________
[VehicleUpdateInsurance]
;;

SQL1_1 = UPDATE vehicles SET alive=?, active=?, damage=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5
;;______________________________________________________________
[getVehiclePos]
;;

SQL1_1 = SELECT id, side, classname, type, pid, alive, active, plate, color, inventory, gear, position, direction
SQL1_2 = 	FROM vehicles WHERE alive=1 AND active=0 AND SavePos=1 AND pid=? AND plate=?;
SQL1_INPUTS = 1, 2
Number of Inputs = 2

OUTPUT = 1, 2-String, 3-String, 4-String, 5-String, 6, 7, 8, 9, 10-AltisLifeRPG_Array, 11-AltisLifeRPG_Array, 12-AltisLifeRPG_Array, 13
;;______________________________________________________________
[vehicleSavePos]
;;

SQL1_1 = UPDATE vehicles SET active=?, SavePos=?, inventory=?, gear=?, damage=?, position=?, direction=? WHERE pid=? AND plate=?;

SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array, 4, 5-AltisLifeRPG_Array, 6, 7, 8, 9
Number of Inputs = 9
;;______________________________________________________________
[updateVehicleSavePos]
;;

SQL1_1 = UPDATE vehicles SET active=?, SavePos=? WHERE pid=? AND plate=?
SQL1_INPUTS = 1, 2, 3, 4
Number of Inputs = 4


;;**************************************************************
;;**************************************************************
;; Smartphone
;;

;;______________________________________________________________
[smartphoneInsertMessages]
;;
SQL1_1 = INSERT INTO messages 
;;							1      2      3     	4    	5
SQL1_2 = 				(fromID, toID, message, FromName, toName) 
SQL1_3 = 				VALUES (?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4, 5
Number of Inputs = 5
;;______________________________________________________________
[smartphoneSelectMessages]
;;

SQL1_1 = SELECT fromID, toID, message, fromName, toName FROM messages WHERE toID=? ORDER BY time DESC LIMIT 10;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3-String, 4-String, 5-String
;;______________________________________________________________
[smartphoneDeleteMessages]
;;

SQL1_1 = DELETE FROM messages WHERE toID=?;

SQL1_INPUTS = 1
Number of Inputs = 1
;;______________________________________________________________


;;**************************************************************
;;**************************************************************
;; Housing
;;

;;______________________________________________________________
[housingCount]
;;

SQL1_1 = SELECT COUNT(*) FROM houses WHERE owned='1';

Number of Inputs = 0

;;______________________________________________________________
[housingInit]
;;

SQL1_1 = SELECT houses.id, houses.pid, houses.pos, players.name FROM houses INNER JOIN players ON houses.pid=players.playerid WHERE houses.owned='1' LIMIT ?,10;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1, 2-String, 3-String, 4-String

;;______________________________________________________________
[housingFetchPlayerHouse]
;;
SQL1_1 = SELECT pid, pos, inventory, containers FROM houses WHERE pid=? AND owned='1';

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3-AltisLifeRPG_Array, 4-AltisLifeRPG_Array

;;______________________________________________________________
[housingCheckHouse]
;;
SQL1_1 = SELECT CASE
SQL1_2 =    WHEN EXISTS(SELECT id FROM houses WHERE pos=? AND owned='1')
SQL1_3 =           THEN 'false' ELSE 'true'
SQL1_4 = END

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1

;;______________________________________________________________
[housingAddHouse]
;;
SQL1_1 = INSERT INTO houses (pid, pos, inventory, containers, owned) 
SQL1_2 = 	VALUES(?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array, 4-AltisLifeRPG_Array, 5
SQL2_1 = SELECT id FROM houses WHERE pos=? AND pid=? AND owned='1';
SQL2_INPUTS = 2, 1

Number of Inputs = 5
OUTPUT = 1

;;______________________________________________________________
[housingSellHouse]
;;
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE pid=? AND pos=? AND owned='1';
SQL1_INPUTS = 1, 2, 3

Number of Inputs = 3

;;______________________________________________________________
[housingSellHouse2]
;;
SQL1_1 = UPDATE houses SET owned='0', pos='[]' WHERE id=?;
SQL1_INPUTS = 1

Number of Inputs = 1

;;______________________________________________________________
[houseUpdateContainer]
;;
SQL1_1 = UPDATE houses SET containers=? WHERE id=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2

Number of Inputs = 2

;;______________________________________________________________
[housingUpdateInventory]
;;
SQL1_1 = UPDATE houses SET inventory=? WHERE id=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2

Number of Inputs = 2

;;______________________________________________________________
[housingCleanup]
;;
SQL1_1 = SELECT pid, pos, inventory, containers FROM houses WHERE pid=? AND owned='1';
SQL1_INPUTS = 1

Number of Inputs = 1

;;**************************************************************
;;**************************************************************
;; Wanted System
;;


;;______________________________________________________________
[wantedGetCrimes]
;;

SQL1_1 = SELECT wantedID, wantedCrimes FROM wanted WHERE wantedID=?;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1-String, 2-AltisLifeRPG_Array

;;______________________________________________________________
[wantedUpdateCrimes]
;;

SQL1_1 = UPDATE wanted SET wantedCrimes = ?, wantedBounty = wantedBounty + ?, active = '1' WHERE wantedID=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2, 3

Number of Inputs = 3

;;______________________________________________________________
[wantedInsertCrimes]
;;

SQL1_1 = INSERT INTO wanted (wantedID, wantedName, wantedCrimes, wantedBounty, active) 
SQL1_2 = 	VALUES(?,?,?,?,?);

SQL1_INPUTS = 1, 2, 3, 4-AltisLifeRPG_Array, 5

Number of Inputs = 5

;;______________________________________________________________
[wantedFetchBounty]
;;

SQL1_1 = SELECT wantedID, wantedName, wantedCrimes, wantedBounty FROM wanted WHERE active='1' AND wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1

OUTPUT = 1-String, 2-String, 3-AltisLifeRPG_Array, 4

;;______________________________________________________________
[wantedFetchCrimes]
;;

SQL1_1 = SELECT wantedCrimes, wantedBounty FROM wanted WHERE active='1' AND wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-AltisLifeRPG_Array, 2

;;______________________________________________________________
[wantedFetchIDAll]
;;

SQL1_1 = SELECT wantedID, wantedName FROM wanted WHERE active='1';

OUTPUT = 1-String, 2-String

;;______________________________________________________________
[wantedFetchID]
;;

SQL1_1 = SELECT wantedID, wantedName FROM wanted WHERE active='1' AND wantedID in (?);
SQL1_INPUTS = 1-STRIP

Number of Inputs = 1
OUTPUT = 1-String, 2-String

;;______________________________________________________________
[wantedFetchPerson]
;;

SQL1_1 = SELECT wantedID, wantedName, wantedBounty FROM wanted WHERE wantedID=? AND active='1';
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String, 2-String, 3

;;______________________________________________________________
[wantedFetchName]
;;

SQL1_1 = SELECT wantedName FROM wanted WHERE wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1
OUTPUT = 1-String

;;______________________________________________________________
[wantedUpdateName]
;;

SQL1_1 = UPDATE wanted 
SQL1_2 = 				SET wantedName=? WHERE wantedID=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;______________________________________________________________
[wantedRemoveCrimes]
;;

SQL1_1 = UPDATE wanted 
SQL1_2 =				SET active = 0, wantedCrimes = '[]', wantedBounty = 0 WHERE wantedID=?;
SQL1_INPUTS = 1

Number of Inputs = 1

;;**************************************************************
;;**************************************************************
;; Dynmarket
;;

;;______________________________________________________________

[DYNMARKET_Price_Set]
;;
 
SQL1_1 = UPDATE dynmarket SET prices = ? WHERE id=1;
 
SQL1_INPUTS = 1-AltisLifeRPG_Array
Number of Inputs = 1

;;______________________________________________________________

[DYNMARKET_Price_Get]
;;
 
SQL1_1 = SELECT prices FROM dynmarket WHERE id=1;
 
OUTPUT = 1-AltisLifeRPG_Array

;;**************************************************************
;;**************************************************************
;; Government
;;

;;______________________________________________________________
[gov_setLaws]
;;
SQL1_1 = UPDATE goverment
SQL1_2 = SET laws =? WHERE ID=1;
 
SQL1_INPUTS = 1-AltisLifeRPG_Array
Number of Inputs = 1
 
;;______________________________________________________________
[gov_getLaws]
;;
 
SQL1_1 = SELECT laws FROM goverment where ID=1;

Number of Inputs = 0
OUTPUT = 1-AltisLifeRPG_Array

;;______________________________________________________________
[gov_setCash]
;;
SQL1_1 = UPDATE goverment
SQL1_2 = SET govCash =? WHERE ID=1;
 
SQL1_INPUTS = 1
Number of Inputs = 1

;;______________________________________________________________
[gov_getCash]
;;
 
SQL1_1 = SELECT govCash FROM goverment WHERE ID=1;

Number of Inputs = 0
OUTPUT = 1

;;______________________________________________________________
[gov_getTaxes]
;;
 
SQL1_1 = SELECT taxes FROM goverment WHERE ID=1;

Number of Inputs = 0
OUTPUT = 1

;;______________________________________________________________
[gov_setTaxes]
;;
SQL1_1 = UPDATE goverment
SQL1_2 = SET taxes =? WHERE ID=1;
 
SQL1_INPUTS = 1
Number of Inputs = 1

;;______________________________________________________________
[gov_removeGov]
;;
SQL1_1 = UPDATE goverment
SQL1_2 = SET govID =? WHERE ID=1;
 
SQL1_INPUTS = 1
Number of Inputs = 1

;;______________________________________________________________
[gov_getGov]
;;
 
SQL1_1 = SELECT govID FROM goverment WHERE ID=1;

Number of Inputs = 0
OUTPUT = 1-String

;;______________________________________________________________
[gov_setGov]
;;
SQL1_1 = UPDATE goverment
SQL1_2 = SET govID =? WHERE ID=1;
 
SQL1_INPUTS = 1
Number of Inputs = 1

;;**************************************************************
;;**************************************************************
;; GangBase
;;

;;______________________________________________________________
[BaseAdd]
;;
SQL1_1 = INSERT INTO base (pid, pos, inventory, containers, members, owned, gangid)
SQL1_2 = 	VALUES(?,?,?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array, 4-AltisLifeRPG_Array, 5, 6, 7

Number of Inputs = 7

;;______________________________________________________________
[BaseAdd2]
;;
SQL1_1 = INSERT INTO base (pid, pos, inventory, containers, members, owned, gangid)
SQL1_2 = 	VALUES(?,?,?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array, 4, 5, 6, 7

Number of Inputs = 7

;;______________________________________________________________
[RealBaseAdd]
;;
SQL1_1 = Insert INTO realbase (pos, inventory, gangid, slots)
SQL1_2 = VALUES(?,?,?,?);
SQL1_INPUTS = 1, 2-AltisLifeRPG_Array, 3, 4

Number of Inputs = 4
;;______________________________________________________________
[ObjectAdd]
;;
SQL1_1 = Insert INTO object (id, pos, inventory, kind, dir)
SQL1_2 = VALUES(?,?,?,?,?);
SQL1_INPUTS = 1, 2, 3-AltisLifeRPG_Array, 4, 5-String

Number of Inputs = 5
;;______________________________________________________________
[SelectBase]
;;
SQL1_1 = SELECT id FROM base WHERE pos=? AND pid=? AND owned=1;

SQL1_INPUTS = 1, 2
Number of Inputs = 2
OUTPUT = 1

;;______________________________________________________________
[SelectBase2]
;;
SQL1_1 = SELECT id, pos, pid, members FROM base WHERE owned=1;

Number of Inputs = 0
OUTPUT = 1-String, 2-String, 3-String, 4

;;______________________________________________________________
[SelectBaseCount]
;;
SQL1_1 = SELECT COUNT(*) FROM base WHERE owned='1';

Number of Inputs = 0

;;______________________________________________________________
[BaseInit]
;;
SQL1_1 = SELECT base.gangid, base.pid, base.pos, players.name FROM base INNER JOIN players ON base.pid=players.playerid WHERE base.owned='1' LIMIT ?,10;

SQL1_INPUTS = 1
Number of Inputs = 1

OUTPUT = 1, 2-String, 3-String, 4-String
;;______________________________________________________________
[SelectRealBase]
;;
SQL1_1 = SELECT pos, inventory, slots FROM realbase;

Number of Inputs = 0
OUTPUT = 1, 2-AltisLifeRPG_Array, 3

;;______________________________________________________________
[SelectObject]
;;
SQL1_1 = SELECT id, pos, dir, kind, inventory FROM object;

Number of Inputs = 0
OUTPUT = 1, 2, 3, 4-String, 5-AltisLifeRPG_Array

;;______________________________________________________________
[UpdateObject]
;;
SQL1_1 = UPDATE object SET inventory=? WHERE id=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2

Number of Inputs = 2

;;______________________________________________________________
[UpdateRealbase]
;;
SQL1_1 = UPDATE realbase SET inventory=? WHERE gangid=?;
SQL1_INPUTS = 1-AltisLifeRPG_Array, 2

Number of Inputs = 2

;;______________________________________________________________
[UpdateRealbaseSlots]
;;
SQL1_1 = UPDATE realbase SET slots=? WHERE gangid=?;
SQL1_INPUTS = 1, 2

Number of Inputs = 2

;;_______________________________________________________________
[DeleteObject]
;;

SQL1_1 = DELETE FROM object WHERE id=? AND kind=?;
SQL1_INPUTS = 1, 2

Number of Inputs =2

;;_______________________________________________________________
[BaseMembersUpdate]
;;

SQL1_1 = UPDATE base SET members=? WHERE gangid=? 
SQL1_INPUTS = 1, 2

Number of Inputs =2